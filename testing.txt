My main goal of testing for this assignment is mainly focus on:

Accuracy , Code Coverage , and then Readability & be Maintainable 

Firstly, in tests(), I've done units test for each function and try to cover as many cases as I can come up with, 
to secure accuracy & increase code coverage.

Secondly, there is a testReadFile() inside tests(), which I try to randomly read several source inputs to 
ensure the sources are correct.

Thirdly, there is also another test function - readMultipleFiles(), I try to cover enough testcases to run 
code coverage report.  (Please find this reports in this folder )

In the CCR(Code Coverage Report):
/* Parser */
File 'nuclei.c'
Lines executed:86.36% of 623
Creating 'nuclei.c.gcov'

As can see in the parser CCR, Totally 85 lines that are unable to cover as they are EXIT_FAILURE (on_error) /bool false. which I can't assert any fail case.
otherwise, any false/on_error case will halt the execution of code.

/*Interpreter/
File 'nuclei.c'
Lines executed:87.87% of 874
Creating 'nuclei.c.gcov'

As can see in the interpreter CCR, Totally 106 lines that are unable to cover as they are EXIT_FAILURE (on_error) /bool false. which I can't assert any fail case.
otherwise, any false/on_error case will halt the execution of code.

Please note that the reason why I put testReadFile() & readMultipleFiles() in comment to avoid confusion, 
as they will do interpPrint or generate "Parse OK" if parse successfully.


Steps to generate CCR for my assignment:
(make clean if previous report exist) 
-- make all 
-- make parse_c 
(make interp_c if run interpreter CCR)
-- ./parse_c (any source file).ncl  # (I've included all test cases in my tests());
(-- ./interp_c(any source file).ncl # this is for interpreter)
-gcov nuclei.c


